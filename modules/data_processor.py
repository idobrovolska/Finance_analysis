import pandas as pd

class DataProcessor:
    def __init__(self, logger):
        self.logger = logger

    def clean_data(self, df):
        self.logger.info("üßπ –û—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...")
        try:
            # –í–∏–¥–∞–ª—è—î–º–æ –ø–æ—Ä–æ–∂–Ω—ñ —Ä—è–¥–∫–∏ —Ç–∞ —Å—Ç–æ–≤–ø—Ü—ñ
            df.dropna(how="all", inplace=True)
            df.dropna(axis=1, how="all", inplace=True)

            # –í–∏–¥–∞–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤ (—è–∫—â–æ —î)
            df.drop_duplicates(inplace=True)

            # –°–∫–∏–¥–∞—î–º–æ —ñ–Ω–¥–µ–∫—Å –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ –∑ –¥–∞–Ω–∏–º–∏
            df.reset_index(drop=True, inplace=True)

            # –ü–µ—Ä–µ–∫–æ–Ω–∞—î–º–æ—Å—å, —â–æ –∫–æ–ª–æ–Ω–∫–∞ Date ‚Äî —É datetime —Ñ–æ—Ä–º–∞—Ç—ñ
            if 'Date' in df.columns:
                df['Date'] = pd.to_datetime(df['Date'], errors='coerce')
                df.dropna(subset=['Date'], inplace=True)  # –≤–∏–¥–∞–ª—è—î–º–æ —Ä—è–¥–∫–∏ –∑ –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–∏–º–∏ –¥–∞—Ç–∞–º–∏

            self.logger.info(f"‚úÖ –î–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ: {df.shape[0]} —Ä—è–¥–∫—ñ–≤, {df.shape[1]} —Å—Ç–æ–≤–ø—Ü—ñ–≤.")
            return df
        except Exception as e:
            self.logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: {e}")
            return pd.DataFrame()

    def transform_data(self, df):
        self.logger.info("üîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö...")
        try:
            # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–ª–æ–Ω–∫—É –∑ –≤—ñ–¥—Å–æ—Ç–∫–æ–≤–æ—é –∑–º—ñ–Ω–æ—é —Ü—ñ–Ω–∏ –∑–∞–∫—Ä–∏—Ç—Ç—è
            if "Close" in df.columns:
                df["Returns"] = df["Close"].pct_change()
            self.logger.info("‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            return df
        except Exception as e:
            self.logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö: {e}")
            return pd.DataFrame()
