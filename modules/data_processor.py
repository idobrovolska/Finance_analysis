import pandas as pd


class DataProcessor:
    def __init__(self, logger):
        self.logger = logger

    def clean_data(self, df):
        self.logger.info("üßπ –û—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö...")
        try:
            # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ—Ä–æ–∂–Ω—ñ—Ö —Ä—è–¥–∫—ñ–≤ —ñ —Å—Ç–æ–≤–ø—Ü—ñ–≤
            df.dropna(how="all", inplace=True)
            df.dropna(axis=1, how="all", inplace=True)

            # –í–∏–¥–∞–ª–µ–Ω–Ω—è –¥—É–±–ª—ñ–∫–∞—Ç—ñ–≤
            df.drop_duplicates(inplace=True)

            # –°–∫–∏–¥–∞–Ω–Ω—è —ñ–Ω–¥–µ–∫—Å–∞ –¥–ª—è –∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –µ–∫—Å–ø–æ—Ä—Ç—É –≤ CSV
            df.reset_index(drop=True, inplace=True)

            self.logger.info(f"‚úÖ –î–∞–Ω—ñ –æ—á–∏—â–µ–Ω–æ: {df.shape[0]} —Ä—è–¥–∫—ñ–≤, {df.shape[1]} —Å—Ç–æ–≤–ø—Ü—ñ–≤.")
            return df
        except Exception as e:
            self.logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –æ—á–∏—â–µ–Ω–Ω—è –¥–∞–Ω–∏—Ö: {e}")
            return pd.DataFrame()

    def transform_data(self, df):
        self.logger.info("üîÑ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –¥–∞–Ω–∏—Ö...")
        try:
            # –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –º–æ–∂–µ –≤–∫–ª—é—á–∞—Ç–∏ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü—ñ—é —Ç–∏–ø—ñ–≤, —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –Ω–æ–≤–∏—Ö –∫–æ–ª–æ–Ω–æ–∫ —Ç–æ—â–æ
            if "Close" in df.columns:
                df["Returns"] = df["Close"].pct_change()
            self.logger.info("‚úÖ –¢—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")
            return df
        except Exception as e:
            self.logger.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü—ñ—ó –¥–∞–Ω–∏—Ö: {e}")
            return pd.DataFrame()
