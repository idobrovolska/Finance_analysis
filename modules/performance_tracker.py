import time


class PerformanceTracker:
    def __init__(self, logger):
        self.logger = logger
        self.timings = {}

    def start(self, section):
        self.timings[section] = time.time()
        self.logger.info(f"‚è±Ô∏è –ü–æ—á–∞—Ç–æ–∫ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è —á–∞—Å—É –¥–ª—è {section}")

    def stop(self, section):
        if section in self.timings:
            duration = time.time() - self.timings[section]
            self.logger.info(f"‚è≤Ô∏è –ó–∞–≤–µ—Ä—à–µ–Ω–æ –≤–∏–º—ñ—Ä—é–≤–∞–Ω–Ω—è —á–∞—Å—É –¥–ª—è {section}: {duration:.2f} —Å–µ–∫.")
        else:
            self.logger.warning(f"‚ö†Ô∏è –°–ø—Ä–æ–±–∞ –∑—É–ø–∏–Ω–∏—Ç–∏ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∏–π —Ç–∞–π–º–µ—Ä –¥–ª—è {section}.")

    def generate_report(self):
        report = []
        for section, start_time in self.timings.items():
            duration = time.time() - start_time
            report.append(f"üïí {section} - {duration:.2f} —Å–µ–∫.")
        return report
